/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

import java.util.regex.*
import java.nio.file.*

plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'
}

repositories {
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

dependencies {
  implementation 'com.google.code.gson:gson:2.11.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

ext.jarName = 'bhutility.jar'
ext.USR_HOME = System.getProperty('user.home')
ext.JDK_VER = 21
ext.appDirName = 'App';
ext.ps = File.pathSeparator
ext.fs = File.separator
ext.projName = 'BhUtility'
ext.jarLibName = 'Jlib'

// ライブラリの準備
task prepareLibs(type: Copy) {
  from configurations.runtimeClasspath
  into "$projectDir/../$appDirName/$jarLibName"

  doFirst {
    delete "$projectDir/../$appDirName/$jarLibName"
  }
}

sourceSets {
  main {
    java {
      srcDir "$projectDir/../src/main/java"
    }
  }
}

compileJava {
  classpath += fileTree("$projectDir/../$appDirName/$jarLibName") { include "*.jar" }
  options.incremental = true
  options.fork = true
  options.failOnError = true
  options.forkOptions.executable = USR_HOME + '/java/' + JDK_VER + '/jdk/bin/javac.exe'
}


task createJar(type: Exec) {
  dependsOn 'compileJava'

  doFirst {
    commandLine (
      (USR_HOME + '/java/' + JDK_VER +'/jdk/bin/jar'),
      '--create',
      '--file', "$projectDir/../$appDirName/$jarLibName/${jarName}",
      '-C', "$projectDir/build/classes/java/main", '.')
  }
}

